<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>克雷格·克斯蒂恩斯</title><link/>/<description>克雷格·克斯蒂恩斯</description><generator>雨果——gohugo.io</generator><language> en-us</language><lastbuilddate> 2022 年 11 月 28 日星期一 11:23:56 -0800 </lastbuilddate><atom:link href="/index.xml" rel="self" type="application/rss+xml"></atom:link><item><title>我们要解决什么问题？</title><link/> /2022/11/28/我们要解决什么问题/<pubDate> Mon, 28 Nov 2022 11:23:56 -0800</pubDate><guid> /2022/11/28/我们要解决什么问题/</guid><description> &lt;p>;如果您想显得自己是房间里最聪明的人，请在安静地坐 15 分钟后等待谈话中断，然后问&lt;em>;“我们在这里要解决什么问题？”&lt;/ em>; 每次都有效。&lt;/p>; &lt;p>;我们都经历过这样的情况。你走进一个会议，里面有 10 个人。它开始滚动，不同的人插话。有些人似乎在做个人笔记，他们总是这样做。有人安排了会议，但他们通常不是做出决定的人。主要是在 3 个人之间来回进行，另外 7 个人在旁边观看。已经进行了 15 分钟，尽管已经进行了热烈的讨论……您发现自己又回到了第一分钟的原点，似乎损失了 14 分钟，而且您不确定会发生什么。&lt;/p>; &lt;p>;理想的更健康的环境有提前发出的议程。根据议程，会议计划有一个明确的结构，这可能指向一个明确的目标。即使没有议程，替代结构也将是邀请中明确规定的目标。在会议中，您可以&lt;a href=&quot;https://www.heavybit.com/library/video/executive-communication&quot;>;SCQA&lt;/a>;进行现场直播。如果会议邀请包含指向&lt;strong>;笔记文档&lt;/strong>;的链接，那么会议笔记将由&lt;strong>;明确的抄写员&lt;/strong>;为会议转录，&lt;strong>;之后发送&lt;/strong>;，这是巨大的奖励分强>;让人们同意/确认这是一次良好的会议记录。&lt;/p>; &lt;p>;作为一名出色的协调者，您仍然会遇到第一种情况。每次等待10-15分钟，然后提问。绕道后的做法似乎比前 1 分钟就开始更有效。与仅仅通过提问来让自己看起来不错相比，更好地将问题内化为自己（这将会发生）。&lt;/p>;</description></item><item><title>要使用个人技巧/黑客吗？经常使用它</title><link/>/2022/11/22/要使用个人技巧/hack-Use-it-often/<pubDate> Tue, 22 Nov 2022 08:11:56 -0800</pubDate><guid> /2022/11/22/要使用个人技巧/hack-Use-it-often/</guid><description> &lt;p>;我所说的技巧/黑客是什么意思？这可能非常灵活，但我会放弃一些我个人的。&lt;/p>; &lt;p>;我的产品管理哲学的规则之一是，如果你要使用某种工具或技巧，那么经常使用它。事实上，这是我最喜欢的产品经理面试问题之一。如果你接受我的采访，请做好准备。它也适用于工程经理和其他担任领导角色的人，但我发现特别适合 PM。&lt;/p>; &lt;h3 id=&quot;getting-a-response-from-team-emails&quot;>;获得团队的回复电子邮件&lt;/h3>; &lt;p>;公司内使用 team@ 别名很常见，无论是整个团队还是较小的团队。作为产品经理，您可能需要向 sales@ 发送电子邮件并获取所请求功能的反馈或路线图的反馈。您很可能会花一些时间和精力来制作这封电子邮件，既要简洁，又要提供足够的背景信息，以便他们给您一个明智的答复。如果你足够优秀，你可以在发送电子邮件之前通过 hemingway 应用程序输入电子邮件，并将其降到 7 级或更低级别。您可以在周二上午 10 点左右发送，这样就不会在周一分类中丢失，也不会在周四长假周末错过。然后……沉默。没有什么。没什么。压缩。 Zilch。&lt;/p>; &lt;p>;我不太确定蟋蟀的原因，也许他们充其量认为他们的一群同伴私下回复了你。最坏的情况是，他们表现得冷漠，只关心完成下一笔交易，而不提供有助于长期增长的反馈。但我不是来剖析原因的。如何获得回复？&lt;/p>; &lt;p>;稍微调整一下电子邮件结构，不再使用 sales@ 别名，而是针对个人。提取列表中每个人的电子邮件，将开头设为通用的“嗨”，然后通过邮件合并将其直接发送给个人。&lt;/p>; &lt;p>;根据经验，有首席执行官（我忘了省略他们） ）当他们外出度假时给我回复电子邮件，对回复缓慢（几个小时）表示歉意，并表示他们会在周末之前收到我的反馈。&lt;/p>; &lt;h3 id=&quot;turn-a-group-email-into-a -love-fest&quot;>;将群组电子邮件变成一场爱情盛宴&lt;/h3>; &lt;p>;尽可能一对一的电子邮件都很棒，并且会征求回复。通常您需要向团队发送公告。 “明天我们有一个重大公告”。您将像上面那样在团队电子邮件中投入相同的工作和精力，通常的回复也是蟋蟀。&lt;/p>; &lt;p>;我的团队知道我这样做，但它仍然有效。让 1-2 位其他领导者（不一定是管理层）但士气领导者知道它即将到来，并以积极的评论和赞扬对 team@ 列表进行回复。这同样适用于发送至 team@ 的新员工公告。你最终会遇到那些不想被排除在外的人。它将开始获得公开和私人的反馈，了解沟通的优点，并让您了解哪些方面可以改进。&lt;/p>; &lt;h3 id=&quot;what-are-your-hacks&quot;>;你有什么技巧？&lt;/h3>; &lt;p>;这些只是其中的一些，因为我一直在写一些较长形式的我的个人产品哲学，这些内容将包含更多的内容。但与我共事过的每一位优秀产品经理都有自己的一套技巧。这又是我最喜欢的面试问题之一，多年来我从其他人那里学到了很多很棒的技巧。但很好奇，即使不需要我们接受采访，你的是什么？ @&lt;a href=&quot;https://www.twitter.com/craigkerstiens&quot;>;craigkerstiens&lt;/a>;&lt;/p>;</description></item><item><title> Postgres 的未竟事业</title><link/>/2022/05/18/Postgres 未完成的业务/<pubDate> Wed, 18 May 2022 08:52:56 -0800</pubDate><guid> /2022/05/18/Postgres 未完成的业务/</guid><description> &lt;p>;7 年前我离开了 Heroku。在过去的几周里，Heroku 对于它的消亡进行了很多讨论，无论它是&lt;a href=&quot;https://twitter.com/sraney/status/1519516583042818049&quot;>;成功&lt;/a>;还是失败，以及当前的情况状态。这很大程度上是由最近持续发生的安全事件引发的，但正如其他人指出的那样，该产品已经被及时冻结了几年。&lt;/p>; &lt;p>;我不是在这里重述许多问题关于下一个 Heroku 是什么的争论，或者它是&lt;a href=&quot;https://news.ycombinator.com/item?id=31373300&quot;>;成功&lt;/a>;还是失败，或者它可能如何&lt; a href=&quot;https://news.ycombinator.com/item?id=31373394&quot;>;不同&lt;/a>;。 Heroku 仍然是开发人员体验的黄金标准，并且经常在宣传中使用 Heroku for X。多年来，许多人试图模仿 Heroku 但都失败了。迄今为止，Heroku 产生了可观的收入。 &lt;a href=&quot;https://twitter.com/_adamwiggins_/status/1334595784373923840&quot;>;如果没有 Heroku&lt;/a>;，从开发者体验的角度来看，我们都会处于更糟糕的境地。&lt;/p>; &lt;p>;但我不想谈论 Heroku PaaS。相反，我想分享一些我的故事和 Heroku Postgres（DoD - 我们内部称为数据部）的一些故事。在 5 年的时间里，我在 Heroku 担任过很多产品角色，但我的大部分时间都在 DoD 团队中。当我离开 Heroku 时，这是一个由大约 8 名工程师组成的团队，正在运行和管理超过 150 万个 Postgres 数据库——每周出现一次的问题是百万分之一，我们设计了一个系统，使我们能够进行扩展，而无需 50 人的运维团队来解决问题。数据库&lt;/p>; &lt;p>;这将是一段个人旅程，但也希望能对愿景有所了解，并希望对 Postgres 服务未来的可能性有一些了解。&lt;/p>; &lt;p >;&lt;em>;我最初并不是受雇从事与 Postgres 相关的任何工作。&lt;/em>;作为早期的 PM，我首先从事计费方面的工作，后来又从事核心语言的工作，并推出了对 Heroku 的 Python 支持。几个月后，我发现自己与许多内部工程师就 Postgres 进行了对话。 “为什么不使用 hstore？”、“回滚事务的事务性 DDL 绝对是巨大的！”、“并发索引创建在后台运行而不持有锁，这应该始终是您添加索引的方式”索引。”现在我们有一些伟大的工程师，但他们是通过 ActiveRecord 进行交互的典型工程师，并且不想考虑数据库。&lt;/p>; &lt;p>;正如我发现自己&lt;a href=&quot;https://www. craigkerstiens.com/2012/04/30/why-postgres/&quot;>;向 Postgres 传福音&lt;/a>;，突然我被 Postgres 团队的领导招募来做营销，我对营销一无所知，以为他们在开玩笑。几个月后，我发现自己正在为 DoD 做 PM 和营销。&lt;/p>; &lt;h3 id=&quot;why-did-heroku-pick-postgres&quot;>;为什么 Heroku 选择 Postgres？&lt;/h3>; &lt;p>;但是，我的意思是：我有点超前了。 Heroku 是怎么开始做 Postgres 的或者为什么？运行 PaaS（平台即服务）是一项繁重的工作，运行数据库也是一项繁重的工作。从某种意义上说，两者都做会分散你的注意力。我越来越得出这样的结论：平台公司将尽力&lt;a href=&quot;https://news.ycombinator.com/item?id=31185715&quot;>;专注&lt;/a>;他们的平台，而数据公司将尽力关注数据。好吧，早在那天，我们所有的 Rails 开发人员都要求提供一个数据库，我们想这有多难？ （这比我们预期的工作量要多）。所以我们要运行一个数据库，问题是选择哪个数据库？大多数人没有强烈的意见，但我们的一位安全/运维工程师插话道：“Postgres 一直拥有数据安全可靠的良好记录，我会同意。”&lt;/p>; &lt; p>;就这样，我们构建并启动了 Heroku Postgres。&lt;/p>; &lt;p>;&lt;em>;Heroku Postgres 的第一个版本，没有自动化，没有自助服务配置，您开了一张票，我们会回复并询问当您希望我们为您设置时。&lt;/em>;&lt;/p>; &lt;h3 id=&quot;before-heroku-postgres-was-postgres&quot;>;Heroku Postgres 成为 Postgres 之前&lt;/h3>; &lt;p>;第一个在我们致力于 Heroku Postgres 之前的版本在内部被称为 Shen。该模型更类似于当时和地点常见的共享托管。在单个实例中，我们将打包许多 Postgres 数据库，只需运行 createdb，为您创建一个用户，然后为您提供对该数据库的访问权限。这对于那些刚刚尝试并构建小型应用程序的人来说效果很好，但尽管告诉他们不要将其用于生产，人们仍然继续这样做。&lt;/p>; &lt;p>;虽然 Heroku 在 Heroku Postgres 之前就有 Postgres，但它成为了一个项目和自己的编排2010 年左右，数据库层成为更一流的公民。该项目的初始代号是“&lt;a href=&quot;https://gist.github.com/adamwiggins/7d0e0805e0e44870f17f&quot;>;bifrost&lt;/a>;”。&lt; /p>; &lt;h3 id=&quot;the-original-design&quot;>;原始设计&lt;/h3>; &lt;p>;Heroku Postgres 被设计为拥有一个中央 FSM（有限状态机）来编排数据库。据我所知，这种设计模式来自 &lt;a href=&quot;https://www.twitter.com/pvh&quot;>;@PvH&lt;/a>; 的工作和对视频游戏系统设计的欣赏。对于当时正在构建的软件来说，这感觉像是一种新颖的方法。事实上，它现在是一种更常见的设计模式，这表明它是一个多么伟大的设计，以及团队构建的水平是多么超前。&lt;/p>; &lt;p>;这是一个即将推出的基本 Ruby 应用程序检查状态数据库并在与 Postgres 或 AWS API 交互时完成所需的步骤。那时的 AWS API 与现在不同，这允许构建必要的重试、冗余和服务质量。&lt;/p>; &lt;h3 id=&quot;sometimes-youre-good-sometimes-youre-lucky&quot;>;有时您&amp;rsquo ;很好，有时你很幸运&lt;/h3>; &lt;p>;有时你很好，有时你很幸运，有时两者兼而有之。随着时间的推移，我们建立了更可靠的数据库配置和监控。 2011 年初，我们觉得有必要继续改进这一点。当时是 EC2 的早期阶段，可靠性并不是最强的地方，实例可能会离线。&lt;/p>; &lt;p>;Per &lt;a href=&quot;https://www.twitter.com/danfarina&quot;>;@danfarina&lt; /a>; &amp;ldquo;我们正在考虑进行复制，但跳过归档（通过更仔细地管理服务器之间的状态，例如通过 rsync 直接移动内容，这在 pg_basebackup 之前是/仍然是相当规范的 postgres 内容），但随后之一共享数据库 (shen) 在磁盘丢失时险些失手，导致从 pgbackups 恢复时付出了相当大的努力和一些棘手的工作。&amp;rdquo;&lt;/p>; &lt;p>;&amp;ldquo;然后我们决定采用以前被拒绝的方法一切都建立在档案之上。第一个版本是基于 s3cmd 的，并且是一个原型，应 PvH 的要求发布更原始但更快的东西。当&lt;a href=&quot;https://aws.amazon.com/message/65648/&quot;>;重大磁盘灾难&lt;/a>;于 2011 年 4 月袭来时，我们刚刚将早期版本投入生产，尽管当时正处于某种程度的崩溃之中。评估期，尚未得到充分的锻炼和评估受监控的程序，所以我们祈祷，幸运的是，一旦 AWS 有空闲容量，它就可以在每个数据库上运行。”&lt;/p>; &lt;p>;在活动结束时，最终传达的是，如果我们希望 AWS 可以给我们所有的 EBS 磁盘，但可能所有磁盘都已损坏。正如我们不记得的某个人的充分描述：“这就像买一加仑冰淇淋，但里面可能有粪便”。&lt;/p>; &lt;p>;来自 @danfarina 的更多内容：“这取决于什么？对于当时的我来说，在停止在每个实例上部署 s3cmd 近原型之前，我可能会先将其转换为 boto（迄今为止最成熟的 AWS 客户端绑定之一），但这将是一个灾难。”&lt;/p>; &lt;p>;我们的应用程序具有弹性，因为我们可以利用系统可用的多个测功机和路由层。数据库略有不同，但我们如何才能大规模地提供您最需要的数据库功能：&lt;/p>; &lt;ol>; &lt;li>;无数据丢失&lt;/li>; &lt;li>;提高可用性&lt;/li>; &lt;/ ol>; &lt;p>;第一始终是团队的核心章程，我们会优先考虑它而不是功能和正常运行时间。正常运行时间很重要，功能很重要，但作为数据提供商，如果我们丢失数据，我们就会失去信任。因此，这个快速原型变成了 wal-e，它随后为 Heroku Postgres 的许多未来功能提供了支持，并使用了很多年，尽管现在已经被认为已经过时，有利于更现代的工具，例如 &lt;a href=&quot; https://pgbackrest.org/&quot;>;pgBackRest&lt;/a>;。但就其时间和地点而言，这是一些良好的执行力，而且时机也有些运气。&lt;/p>; &lt;h3 id=&quot;thinking-about-the-entire-experience&quot;>;思考整个体验&lt;/h3>; &lt;p>;作为Heroku 位于应用程序部署的中心点，我们积极尝试端到端地思考体验。这体现在我们积极争取并与能够实现这些目标的社区成员合作的一些小事情上。为此，我想到了几个关键示例。&lt;/p>; &lt;p>;第一个是 &lt;code>;DATABASE_URL&lt;/code>;。其中一些源自 &lt;a href=&quot;https://12factor.net&quot;>;12factor 概念&lt;/a>;，另一些则源于使用 5 个环境变量来定义要连接的内容，感觉过于冗长和麻烦。如果定义了 &lt;code>;DATABASE_URL&lt;/code>;，为什么 Rails 不能直接使用它呢？我不记得这里的具体细节，但怀疑这是我们推动 &lt;a href=&quot;https://www.twitter.com/hone02&quot;>;@hone02&lt;/a>; 提供帮助的事情。&lt;/p>; &lt;p >;第二个是围绕 Postgres 的一些功能。当时 Postgres 进展顺利，但大多数核心社区都关注性能或企业功能。我们从不同的角度与 Rails 开发人员的观众一起探讨这个问题。我们有意识地与一些雇用提交者的 Postgres 咨询公司进行了合作，总的主题是我们如何帮助做出贡献，同时还根据我们从用户那里获得的知识来推进 Postgres。这里的一些亮点包括：&lt;/p>; &lt;ol>; &lt;li>;不仅是 Rails 端的 DATABASE_URL&lt;/code>;，还包括本机 libpq 线路协议。虽然我们没有在这里做这项工作，但我们花费了大量时间&lt;a href=&quot;https://www.postgresql.org/message-id/CAAcg%3DkWxsUeQ7Rz%3Dto4nvuwHJ%2BVj6ADrNHEcqFrGHnYmMNPznQ%40mail.gmail.com&quot;>;倡导并围绕它参与&lt;/a>;。&lt;/li>; &lt;li>;在我看来，pg_stat_statements 现在是以前存在的最有价值的 Postgres 扩展，但对于大多数应用程序来说实际上无法使用。资助这项工作是使 Postgres 本身拥有更多可用见解的基础。&lt;/li>; &lt;li>;JSON/JSONB 协作&lt;/li>; &lt;/ol>; &lt;p>;&lt;em>;值得注意的是，我们后来聘请了几位贡献者来主要关注他们的工作上游 Postgres 本身的时间。&lt;/em>;&lt;/p>; &lt;h3 id=&quot;dataclips-vs-the-team&quot;>;Dataclips 与团队&lt;/h3>; &lt;p>;在 Heroku Postgres 的历史中，不同的人做出了一系列的赌注。首先是 @PvH 推动 Wal-E 作为 MVP 出局，回想起来这绝对是正确的决定。也许对我来说最令人兴奋且人们最不与 Heroku 联系在一起的是 dataclips。 &lt;a href=&quot;https://twitter.com/mattsoldo&quot;>;Matt Soldo&lt;/a>;，为您的数据库提出了 GitHub Gists 的想法。但在 Heroku 作为 PM 的早期，就像许多地方的 PM 一样，你无法轻松地要求工程师尝试某件事。你必须为一件事进行竞选和说服。&lt;/p>; &lt;p>;索尔多没有从团队中获得足够的支持，但他做了很多很棒的事情，值得让他参与其中。我们都错了。 Dataclips 由外部咨询公司作为独立的 Heroku 应用程序构建。它只上线了几周，突然间它就为我们所有的内部仪表板提供了动力。您可以嵌入到谷歌表格中的实时查询，突然我们的内部 KPI Rails 应用程序被数据剪辑和谷歌表格取代。我们不需要 Looker 或 Tableau 或其他花哨的 BI 工具，这可以持续获得 1 亿美元的收入来洞察业务。直到今天，dataclips 仍然是我最喜欢的 Heroku 功能之一，我期待着获得这样的体验，但更好的是，感谢 Soldo 当时没有听我们其他人的意见。&lt;/p>; &lt;h3 id=&quot;names -matter&quot;>;名称很重要&lt;/h3>; &lt;p>;很长一段时间以来，数据库并不以用户友好而闻名。当我们向人们提供关键的数据库原则时，我们希望借鉴其他范式。我们在 git 中大量寻找有关分叉/跟随的灵感。数据库术语很常见，如主/从，但我们知道我们可以做得更好。 Ee 希望让用户了解他们可以用它做什么。每 16 MB 或 60 秒（以较小者为准）归档 WAL 成为持续保护。分叉，是某个时间点的快照。追随者，追随领导节点的东西（只读副本）。我仍然记得与 Redmonk 进行长达一小时的分析师通话，&lt;a href=&quot;https://www.twitter.com/monkchips&quot;>;@monkchips&lt;/a>; 和 &lt;a href=&quot;https://www.twitter.com /sogrady&quot;>;@sogrady&lt;/a>;——主要是让他们发疯然后让他们走（郑重声明&lt;a href=&quot;https://www.twitter.com/monkchips&quot;>;@monkchips&lt;/a>;没有&amp;rsquo ;不喜欢 fork/follow，我想他现在可能已经改变了）。&lt;/p>; &lt;p>;这甚至比我的时代更早开始，有意讨论 Postgres 与 PostgreSQL。但我&lt;a href=&quot;https://www.craigkerstiens.com/2018/10/30/postgres-biggest-mistake/&quot;>;之前&lt;/a>;已经介绍过这一点，你甚至可以在一些文章中看到它其他围绕 &lt;a href=&quot;https://www.postgresql.org/message-id/CAAcg%3DkWxsUeQ7Rz%3Dto4nvuwHJ%2BVj6ADrNHEcqFrGHnYmMNPznQ%40mail.gmail.com&quot;>;libpq&lt;/a>; 进行游说的人。&lt;/p>; &lt; h3 id=&quot;peacetime-vs-wartime&quot;>;和平时期与战时&lt;/h3>; &lt;p>;一切进展顺利，我们正在发布新功能。我们添加了 dataclips，fork/follow 已经存在了一段时间，然后我们收到 Amazon 的通知，他们将在下一次 ReInvent 中推出对 RDS 的 Postgres 支持。我亲自参加了 ReInvent，在宣布这一时刻时，我从未在科技会议上看到过如此热烈的起立鼓掌。在私人渠道中，我们听到有人指出，这是因为我们，对 Postgres 的兴奋和需求变得太明显了，他们无法忽视，他们必须增加支持。&lt;/p>; &lt;p>;我们觉得选择 Postgres 是正确的，并且在我们建造的东西。但我们也知道，现在我们面临着竞争，在另一家基础设施提供商上运行数据库即服务，如何才能竞争？现在，根据多年的经验，我可以说肯定有办法，并且有信心，敏锐的狭窄焦点可以让您构建出令人惊叹的产品，而这在大型公司内部是很难做到的。它位于&lt;a href=&quot;https://www.postgresql.org/docs/9.1/datatype-datetime.html#DATATYPE-DATETIME-SPECIAL-TABLE&quot;>;allballs&lt;/a>;之一（UTC 00:00： 00-当数据团队在周五进行欢乐时光时）我们正在喝啤酒并讨论现在我们真正必须集中注意力。 @&lt;a href=&quot;https://www.twitter.com/pvh&quot;>;PvH&lt;/a>; 和 @&lt;a href=&quot;https://www.twitter.com/danfarina&quot;>;danfarina&lt;/a>; 是讨论我个人作为一个领导者的身份——显然，在和平时期，当一切都很好的时候，我表现得还不错，但在战时，他们愿意把赌注押在我身上。&lt;/p>; &lt;p>;两周后，我带着 2-寻呼机评估可能发生的情况、我们如何竞争，包括 3 个潜在的收购目标，这些目标可以让我们提供更具差异化的产品。几个月内，我们完成了其中一项收购，后来成为 Heroku Connect。出于多种原因，它很有意义，其中包括 &lt;a href=&quot;https://www.twitter.com/adam_g&quot;>;Adam Gross&lt;/a>; 是 Heroku 的天使投资人，他非常了解这一点，并帮助建立了 Salesforce早年的平台。这并不是结束，而只是我们如何积极竞争而不是仅仅“托管 Postgres”的开始。与更全面的托管体验相比。&lt;/p>; &lt;h3 id=&quot;metrics-and-monitoring-that-almost-was&quot;>;指标和监控几乎就是&lt;/h3>; &lt;p>;Heroku 的下一个愿景和目标Postgres 将继续为您的数据库提供更好的易用性和洞察力。 Postgres 本身已经有大量关于它如何使用的精彩数据。目录表和诸如 pg_stat_statements 之类的扩展拥有丰富的信息，但查询它看起来就像 200 行黑魔法 SQL。 &lt;a href=&quot;https://www.twitter.com/leinweber&quot;>;@leinweber&lt;/a>; 可能是团队中最早、也是最优秀的人之一，并迅速做出了可供人们使用的东西。我们指标之旅的第一步是他通过 &lt;a href=&quot;https://blog.heroku.com/more_insight_into_your_database_with_pgextras&quot;>;pg-extras&lt;/a>; 轻松访问这些 Postgres 见解。&lt;/p>; &lt;p>;继续在构建内部基础系统的过程中，事实上我们只花了 3 个月的时间 &lt;a href=&quot;https://www.crunchydata.com&quot;>;@crunchydata&lt;/a>; 构建了精神上一致的类似系统，以专注于收集来自系统的各种元数据以及通知和通信的能力。我对某些系统感到空白，尽管有些系统是显而易见的——天文台（我不确定是否仍在使用）会观察数据库。&lt;/p>; &lt;p>;这些系统开始容纳大量信息，然后为 Heroku Postgres 仪表板中的各个部分提供动力。诸如慢速查询和高 IO 或 CPU 负载之类的事情会在您登录时提供良好的洞察。最终目标是通过主动通知将各个点联系起来。从 pagerduty 收到故障警报、登录仪表板并修复它是一回事。但是，如果在事情开始恶化的早期迹象中，我们通过电子邮件通知您，您的顺序扫描数量不断增加，开始使您面临 IOPS 饱和的风险，并且因为我们了解 Postgres，您可以添加索引并用一个命令解决这个问题。我们甚至可以在电子邮件中为您提供一个简单的按钮来添加索引。所有基础都已就位，如果您在 Heroku 上运行，您就会收到有关数据库维护的通知，这完全由为此目标构建的底层通知系统提供支持。&lt;/p>; &lt;h3 id=&quot;postgres -can-still-be-better-for-developers&quot;>;Postgres 仍然可以为开发人员提供更好的服务&lt;/h3>; &lt;p>;但我们从未做到这一点。我们中的一些人转移到了不同​​的团队，一些人继续迎接新的挑战，许多人随后继续运行和支持出色的数据库服务。其中一些最初的工程师 Daniel Farina 和 Will Leinweber（以及 PvH）与其他人一样了解该设计及其原因。我们从一开始的目标就是为开发者做得更好。&lt;/p>; &lt;p>;两年前，当人们问我为什么来到&lt;a href=&quot;https://www.crunchydata.com&quot;>;Crunchy Data&lt; /a>; 我告诉他们我还有未完成的事情。 Citus 成功解决了平均客户数据量为 40TB 的可扩展性问题后，我产生了回到国防部的愿景，即为开发人员带来更好的 Postgres 体验的想法。尽管成功的 DBaaS 产品快速增长，但仍然缺少一些东西 - 我们仍然想要创建的 DoD 的最初想法。&lt;/p>; &lt;p>;Postgres 是一个令人惊叹的数据库，通常每秒可以处理数十万个事务眼睛都不眨一下。拥有可轻松查看以评估和提高绩效的内部数据。具有丰富的数据类型、索引和功能。扩展生态系统非常庞大。但作为一名开发人员，您没有时间成为 Postgres 专家。&lt;/p>; &lt;ul>; &lt;li>;如果我们在 N+1 查询潜入您的 Rails 应用程序时告诉您怎么办？&lt;/li>; &lt;li >;当您有 pgBouncer 时，连接不必成为 Postgres 的限制。&lt;/li>; &lt;li>;在构建应用程序的早期阶段有过多的索引吗？如果我们告诉您有关它们的信息，然后单击按钮您就可以删除它们，结果会怎样。&lt;/li>; &lt;/ul>; &lt;p>;我们的一个 &lt;a href=&quot;https://www.twitter.com/crunchydata&quot;>;@ Crunchydata&lt;/a>; 客户对它的描述比我更好。当与我们的一些专家合作深入研究他们的数据库时，他们说“你应该利用他所有的 Postgres 专业知识，然后将其封装起来，通过电子邮件或松弛报告发送给我。”我希望将这种专业知识作为&lt;a href=&quot;https://crunchybridge.com/register&quot;>;产品&lt;/a>;。&lt;/p>; &lt;p>;我的产品策略不是去改变数据库世界。 Postgres 是一个很棒的数据库，它的社区每天都在让它变得更好。我想帮助开源 Postgres 变得更好，并一路回馈它。我的产品策略是在未来几年内以可消耗的形式向我们的每一位客户分发深厚的 Postgres 专业知识。哦，我们也会一路推出一些很酷的东西。&lt;/p>;</description></item><item><title>扩展指南 - 可逆决策与不可逆决策</title><link/>/2021/12/29/缩放可逆与不可逆决策指南/<pubDate> Wed, 29 Dec 2021 13:30:56 -0800</pubDate><guid> /2021/12/29/缩放可逆与不可逆决策指南/</guid><description> &lt;p>;今天早些时候与一位创始人交谈时，谈到了招聘职能领导者的话题。我提出了一条常见的建议，那就是一旦你雇用了他们，就不要把缰绳握得太紧。我看到这样的事情一次又一次发生在首次创始人身上。您聘请了一位新的产品副总裁，然后仍然继续亲自监督大部分产品流程。这是可以理解的，它是你的宝贝，你已经花了很多年的时间来构建它，他们不像你那样喜欢它。&lt;/p>; &lt;p>;可能的结果是你的新产品副总裁不会;t 找到成功。他们会觉得自己无法执行自己的愿景。他们会感到受到微观管理。即使是最小的决定，他们也会觉得不完全是他们自己的决定，并且会受到质疑。&lt;/p>; &lt;p>;也许你可以做得更好，但这不一定是问题所在。您关注的是成长和扩展，这就是您雇用他们的原因。那么如何才能做到这一点而不让业务偏离正轨呢？首先，赋予他们做出决定的权力，但除此之外，您还可以做一些事情，这样您就可以更放心地将其职能领域委托给他们。&lt;/p>; &lt;h3 id=&quot;communication-is-key&quot;>;沟通是key&lt;/h3>; &lt;p>;首先，清楚地传达您的优先事项和思维过程。这并不意味着告诉他们要做什么，而是告诉他们优先事项……鲍勃·艾格 (Bob Iger) 表示，“你必须反复清晰地传达你的优先事项。根据我的经验，这就是优秀管理者与其他管理者的区别”。我无法立即找到参考资料，但记得读过，他每周都会与他的高管们在公司范围内沟通他的 5 个首要任务。这使您可以了解领导层的想法。这可能很简单：&lt;/p>; &lt;ul>; &lt;li>;我担心明年的渠道&lt;/li>; &lt;li>;我担心保留率以及它如何影响长期增长&lt;/li >; &lt;li>;我担心我们的技术堆栈能否在未来 3 年内扩展&lt;/li>; &lt;/ul>; &lt;p>;对话中出现了与上一个类似的内容，这让我们进行了一次简短的对话分为可逆和不可逆。在产品管理中，我看到人们最常见的错误之一是没有做出决定并朝着单一方向前进，而是他们在做出决定之前想要获得所有信息，这可能会造成坏处和好处（但我得到了偏离轨道）。&lt;/p>; &lt;h3 id=&quot;reversible-vs-irreversible-decisions&quot;>;可逆决策与不可逆决策&lt;/h3>; &lt;p>;向新高管传达一个框架，围绕该框架做出正确的决策至关重要，以及哪些决策是正确的如果错误很大，可以从中恢复。并非所有决策对于正确决策都至关重要。如果博客文章中出现拼写错误，您可以轻松修复它。如果您向单个客户发送错误的消息，可能会给该客户带来糟糕的体验，但不会影响其他客户。了解故障的范围和影响对于决策框架非常重要。&lt;/p>; &lt;p>;我们讨论了架构和工程决策比营销更难逆转。但我不确定这是否正确，如果你因糟糕的营销而遭受巨大的公关噩梦，那么可能需要数年时间才能恢复并严重阻碍业务，就像糟糕的架构决策一样。即使在工程决策中，您也可以使用一个框架来衡量做出这一承诺的成本有多大，以及扭转它有多容易。&lt;/p>; &lt;p>;我曾经共事过的最好的工程师之一，已经工作了 15 年了声明它不排除未来的选择。在工程中保留选择性是十倍的事情之一。这不是优雅的代码或过度设计，它是高度不可估量的（至少对我来说是这样），但尝试发展这一点对于您的职能领导以及更高级的个人贡献者来说是巨大的。&lt;/p>; &lt;p >;Which decisions can later be changed and the cost of that is a great framework for how involved you should be vs. not, and the more you can guide your team through that the smoother growing the team will be.&lt;/p>;</description></item><item><title> Top 5 Product and Management skills: SQL, Excel, Clear Communication, Story, Prioritization</title><link/> /2021/04/27/Top-5-Product-and-Management-skills-SQL-Excel-Clear-Communication-Story-Prioritization/<pubDate> Tue, 27 Apr 2021 13:30:56 -0800</pubDate><guid> /2021/04/27/Top-5-Product-and-Management-skills-SQL-Excel-Clear-Communication-Story-Prioritization/</guid><description> &lt;p>;A few months ago there was a tweet from &lt;a href=&quot;https://www.twitter.com/jasoncwarner&quot;>;@jasoncwarner&lt;/a>; about leadership skills/super powers:&lt;/p>; &lt;ul>; &lt;li>;SQL&lt;/li>; &lt;li>;Excel&lt;/li>; &lt;li>;Concise writing&lt;/li>; &lt;li>;Story telling&lt;/li>; &lt;li>;Prioritization.&lt;/li>; &lt;/ul>; &lt;p>;I&amp;rsquo;ve spent quite a bit of time in product management roles, and in recent years more in leadership. I&amp;rsquo;ve found a lot of the skills in product to translate into good leadership skills as well, but maybe I&amp;rsquo;m bluring the lines there. Regardless, with his 5 skills I found myself nodding and have written about each of these some on my blog and then at times on twitter. He long since deleted the tweet, and while I wait for him to republish I thought I&amp;rsquo;d reprise a few of these with my own view point.&lt;/p>; &lt;h3 id=&quot;sql&quot;>;SQL&lt;/h3>; &lt;p>;Yeah, I&amp;rsquo;ma &amp;ldquo;database&amp;rdquo; person. But not really, I&amp;rsquo;ma product person. But if I want to answer a question about what our customers are doing 9 times out of 10 the answer to that question is hiding inside a &lt;a href=&quot;https://www.craigkerstiens.com/2019/02/12/sql-one-of-the-most-valuable-skills/&quot;>;SQL database&lt;/a>;. If it&amp;rsquo;s not in a SQL database they&amp;rsquo;ve made a SQL like interface to access that data. If you want to feel like you have some magical super power that probably none of your peers posses pick up SQL. How many people working in React know SQL? Know many people that write Go know SQL? Same question if you know Ruby.&lt;/p>; &lt;p>;The insights into how many users created their freemium account 3 months ago, but then converted to paying within 30 days, vs converted to paying after 30 days for a cohort analysis of fast converters vs. slow converters I can probably write in SQL before you&amp;rsquo;ve parsed what I&amp;rsquo;m trying to get at and started to write in any other language. That type of insight is powerful.&lt;/p>; &lt;p>;Now if you think of how many people on a product team, or a management team know SQL-you&amp;rsquo;re in a unique position. It really is a &lt;a href=&quot;https://www.craigkerstiens.com/2019/02/12/sql-one-of-the-most-valuable-skills/&quot;>;super power&lt;/a>;&lt;/p>; &lt;h3 id=&quot;excel&quot;>;Excel&lt;/h3>; &lt;p>;This one is more common with MBAs and business types, but nonetheless is still valuable. While I love SQL, a pivot table in SQL isn&amp;rsquo;t quite the same. There are absolutely people that can spin circles around me in Excel (looking at you &lt;a href=&quot;https://twitter.com/rstephensme&quot;>;@rstephensme&lt;/a>;). But Excel is way more broad reaching a programming language than literally everything else. It&amp;rsquo;s powerful and rich, and not all data is large and needs a database.&lt;/p>; &lt;p>;Proficiency to quickly slice and dice things is huge. As you level up in your career you need to be able to take in a lot of information, ask questions of it, fact check it, and then make a decision on it. Excel is one big tool to help on this.&lt;/p>; &lt;h3 id=&quot;writing&quot;>;Writing&lt;/h3>; &lt;p>;My grammar is shit.我知道这。 But that&amp;rsquo;s mostly okay, I&amp;rsquo;ve explicitly focused on clear communication in my career. Concise and clear communication is huge. While the above are super key, if you can simply listen and ingest information that is not clear and then regurgitate it in a clear manner you can have a career in a lot of industries.&lt;/p>; &lt;p>;A few disparate tips here:&lt;/p>; &lt;ul>; &lt;li>;My favorite question to ask in any situation &amp;ldquo;What problem are we trying to solve here?&amp;rdquo; It&amp;rsquo;s greatly focusing and if you internalize it&amp;rsquo;ll steer you to better communication&lt;/li>; &lt;li>;&lt;a href=&quot;https://www.twitter.com/mcgd&quot;>;Michael Dearing&lt;/a>; has a great talk on &lt;a href=&quot;https://www.heavybit.com/library/video/executive-communication/&quot;>;executive communication&lt;/a>; using SCQA given &lt;a href=&quot;https://www.heavybit.com&quot;>;@heavybit&lt;/a>;&lt;/li>; &lt;li>;I run all important emails, blogs, etc. through &lt;a href=&quot;https://hemingwayapp.com/&quot;>;hemingway app&lt;/a>;, the lower the grade level the better&lt;/li>; &lt;/ul>; &lt;h3 id=&quot;story-telling&quot;>;Story telling&lt;/h3>; &lt;p>;I&amp;rsquo;m actually not quite sure where to start on this one. At some level we all want to be entertained. Hollywood isn&amp;rsquo;t the industry it is because they forced us into it. But story telling is a harder one, I&amp;rsquo;ve never coached/mentored anyone on it, I&amp;rsquo;m not even sure I&amp;rsquo;m expert at it. I definitely know a good story and the value of one. Watch a presentation that is monotone and reads off the slides, and it&amp;rsquo;s not that they&amp;rsquo;re just monotone it&amp;rsquo;s that the story isn&amp;rsquo;t there. I&amp;rsquo;ve found I personally love to follow some of the story board supervisors and animators for Pixar and Disney Animation that talk about story narrative. I&amp;rsquo;m not sure it&amp;rsquo;s made me better at this, but it&amp;rsquo;s entertaining.&lt;/p>; &lt;p>;If you can be entertaining you can layer in the valuable pieces.&lt;/p>; &lt;p>;But be yourself in the process.&lt;/p>; &lt;h3 id=&quot;prioritization&quot;>;Prioritization&lt;/h3>; &lt;p>;So many startups I&amp;rsquo;ve talked to have analysis paralysis. Many management folk in their first tenure have analysis paralysis. If there is literally one thing you can start doing around this, it is to &lt;a href=&quot;https://twitter.com/craigkerstiens/status/1381637698193031170&quot;>;make a decision&lt;/a>;, any decision. Measure and course correct later, but way too much time is wasted in deciding and that non-decision is a worse decision in and over itself.&lt;/p>; &lt;p>;Now when it comes to prioritizing and making the right decision. I&amp;rsquo;ve used the same tool for over 10 years, other teams I&amp;rsquo;ve trained on it. I&amp;rsquo;ve run the exercise for teams that wanted coaching on it. Is it perfect no. The important part is find a process and stick with it and perfect it. Per friend &lt;a href=&quot;https://gist.github.com/neovintage/2fb54c5b0cc403714bb94c621bcdd7fd&quot;>;Rimas product principles&lt;/a>; &amp;ldquo;Be consistent - if you&amp;rsquo;re going to use a trick, use it a lot.&amp;rdquo; One of my tricks is gridding, which is an effort vs impact matrix. You can check out a &lt;a href=&quot;https://www.craigkerstiens.com/2013/03/13/planning-and-prioritizing/&quot;>;part 1&lt;/a>; and &lt;a href=&quot;https://www.craigkerstiens.com/2013/08/13/the-rule-of-thirds-followup/&quot;>;part 2&lt;/a>; write-up.&lt;/p>; &lt;p>;The key here is when you step back with higher level granularity and put things side by side visually a lot of things sort themselves out. We conduct the exercise over a 1-2 hr period, often over an offsite. But have done a lot on zoom over the past year. Keep in mind an important part is make a decision on what you will and won&amp;rsquo;t do. The won&amp;rsquo;t part is as important as what you will.&lt;/p>; &lt;h2 id=&quot;conclusion&quot;>;Conclusion&lt;/h2>; &lt;p>;Could there be 10 things on the list?当然。 Is there something more important than these? I&amp;rsquo;m not really sure. If you want to round out your skill set for the next few years in product or management-hope this helps. If you think it&amp;rsquo;s crap &lt;a href=&quot;https://www.twitter.com/jasoncwarner&quot;>;@jasoncwarner&lt;/a>;, but if you really like it I&amp;rsquo;m happy to take credit &lt;a href=&quot;https://www.twitter.com/craigkerstiens&quot;>;@craigkerstiens&lt;/a>;&lt;/p>;</description></item><item><title> Exploring a new Postgres database</title><link/> /2020/11/14/Exploring-a-new-Postgres-database/<pubDate> Sat, 14 Nov 2020 11:30:56 -0800</pubDate><guid> /2020/11/14/Exploring-a-new-Postgres-database/</guid><description> &lt;p>;At past jobs I&amp;rsquo;d estimate we had 100 different production apps that in some way were powering key production systems. Sure some were backend/internal apps while others key production apps such as the dashboard itself. At other companies we had a smaller handful of Heroku apps that powered our cloud service, about 5-10 in total. Even just working with those internal apps it&amp;rsquo;sa number of things to keep context on. But when it comes to interacting with something you don&amp;rsquo;t know getting a lay of the land quickly is key. In helping a customer optimize and tune, or even just understand what is going on in their app an understanding of the data model is key.&lt;/p>; &lt;p>;As I just started a few months back at &lt;a href=&quot;https://www.crunchydata.com&quot;>;Crunchy Data&lt;/a>; I found myself digging into a lot of new systems and quickly trying to ramp up and get a feel for them.&lt;/p>; &lt;p>;Over the past 10 years I&amp;rsquo;ve pretty well codified my steps to getting a feel for a new database. While I&amp;rsquo;m not a DBA and a small portion of my job is spent &lt;a href=&quot;/2013/01/10/more-on-postgres-performance/&quot;>;inside a database&lt;/a>; being able to quickly navigate one saves me hours each month and days out of the year. I&amp;rsquo;m sure my process isn&amp;rsquo;t perfect, but hopefully it helps other when navigating a new Postgres database for the first time.&lt;/p>; &lt;h3 id=&quot;first-the-tooling&quot;>;First the tooling&lt;/h3>; &lt;p>;For any new database my go to tool is psql. The built-in &lt;a href=&quot;/2013/02/21/more-out-of-psql/&quot;>;Postgres CLI&lt;/a>; is going to be the quickest thing for me to navigate around. If you use a CLI for anything else then this should be your preference here as well. I&amp;rsquo;m also going to have a &lt;code>;psqlrc&lt;/code>; file setup that has some good defaults. My go to defaults in my psqlrc are:&lt;/p>; &lt;div class=&quot;highlight&quot;>;&lt;pre style=&quot;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&quot;>;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;>;-- Automatically format output based on result length and screen &lt;span style=&quot;color:#ae81ff&quot;>;\x&lt;/span>; auto -- Prettier nulls &lt;span style=&quot;color:#ae81ff&quot;>;\p&lt;/span>;set null &lt;span style=&quot;color:#e6db74&quot;>;&amp;#39;#&amp;#39;&lt;/span>; -- Save history based on database name &lt;span style=&quot;color:#ae81ff&quot;>;\s&lt;/span>;et HISTFILE ~/.psql_history- :DBNAME -- Turn on automatic query timing &lt;span style=&quot;color:#ae81ff&quot;>;\t&lt;/span>;iming &lt;/code>;&lt;/pre>;&lt;/div>;&lt;h3 id=&quot;getting-a-feel-for-the-tables&quot;>;Getting a feel for the tables&lt;/h3>; &lt;p>;The first thing I&amp;rsquo;m going to do is just table a look at which objects exist within the database with &lt;code>;\d&lt;/code>;. This will spit out a mix of tables, views, sequences all within your database. A cleaner version of this may be &lt;code>;\dt&lt;/code>; which is only tables:&lt;/p>; &lt;div class=&quot;highlight&quot;>;&lt;pre style=&quot;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&quot;>;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;>; &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;>;\&lt;/span>;d List &lt;span style=&quot;color:#66d9ef&quot;>;of&lt;/span>; relations &lt;span style=&quot;color:#66d9ef&quot;>;Schema&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; Name &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Type&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Owner&lt;/span>; &lt;span style=&quot;color:#75715e&quot;>;--------+-------------------------------+----------+---------------- &lt;/span>;&lt;span style=&quot;color:#75715e&quot;>;&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; pg_stat_statements &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;view&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; schema_migrations &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; sessions &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; sessions_id_seq &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; sequence &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; tasks &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; teams &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; users &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres (&lt;span style=&quot;color:#ae81ff&quot;>;7&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;rows&lt;/span>;) &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;>;\&lt;/span>;dt List &lt;span style=&quot;color:#66d9ef&quot;>;of&lt;/span>; relations &lt;span style=&quot;color:#66d9ef&quot;>;Schema&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; Name &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Type&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Owner&lt;/span>; &lt;span style=&quot;color:#75715e&quot;>;--------+-------------------------------+----------+---------------- &lt;/span>;&lt;span style=&quot;color:#75715e&quot;>;&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; schema_migrations &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; sessions &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; tasks &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; teams &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres &lt;span style=&quot;color:#66d9ef&quot;>;public&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; users &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;table&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; postgres (&lt;span style=&quot;color:#ae81ff&quot;>;5&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;rows&lt;/span>;) &lt;/code>;&lt;/pre>;&lt;/div>;&lt;p>;We can also use the describe operation (&lt;code>;\d&lt;/code>;) on specific relations as well such as tables to get a feel for how they look:&lt;/p>; &lt;div class=&quot;highlight&quot;>;&lt;pre style=&quot;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&quot;>;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;>; &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;>;\&lt;/span>;d users &lt;span style=&quot;color:#66d9ef&quot;>;Table&lt;/span>; &lt;span style=&quot;color:#e6db74&quot;>;&amp;#34;public.users&amp;#34;&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Column&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Type&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Collation&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Nullable&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;Default&lt;/span>; &lt;span style=&quot;color:#75715e&quot;>;---------------------------+--------------------------+-----------+----------+-------------------- &lt;/span>;&lt;span style=&quot;color:#75715e&quot;>;&lt;/span>; id &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; uuid &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;not&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;null&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; uuid_generate_v4() email &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; text &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;not&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;null&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#e6db74&quot;>;&amp;#39;&amp;#39;&lt;/span>;::text encrypted_password &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; text &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;not&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;null&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#e6db74&quot;>;&amp;#39;&amp;#39;&lt;/span>;::text reset_password_token &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; text &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; reset_password_sent_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;timestamp&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;with&lt;/span>; time &lt;span style=&quot;color:#66d9ef&quot;>;zone&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; remember_created_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;timestamp&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;with&lt;/span>; time &lt;span style=&quot;color:#66d9ef&quot;>;zone&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; last_sign_in_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;timestamp&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;with&lt;/span>; time &lt;span style=&quot;color:#66d9ef&quot;>;zone&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; created_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;timestamp&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;with&lt;/span>; time &lt;span style=&quot;color:#66d9ef&quot;>;zone&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;not&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;null&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; updated_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;timestamp&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;with&lt;/span>; time &lt;span style=&quot;color:#66d9ef&quot;>;zone&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;not&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;null&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; name &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; text &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;not&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;null&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; team_id &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; uuid &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;not&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;null&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; deleted_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;timestamp&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;with&lt;/span>; time &lt;span style=&quot;color:#66d9ef&quot;>;zone&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; Indexes: &lt;span style=&quot;color:#e6db74&quot;>;&amp;#34;users_pkey&amp;#34;&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;PRIMARY&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;KEY&lt;/span>;, btree (id) &lt;span style=&quot;color:#e6db74&quot;>;&amp;#34;index_users_on_email&amp;#34;&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;UNIQUE&lt;/span>;, btree (email) &lt;span style=&quot;color:#e6db74&quot;>;&amp;#34;index_users_on_reset_password_token&amp;#34;&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;UNIQUE&lt;/span>;, btree (reset_password_token) &lt;span style=&quot;color:#66d9ef&quot;>;Foreign&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#66d9ef&quot;>;key&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;constraints&lt;/span>;: &lt;span style=&quot;color:#e6db74&quot;>;&amp;#34;users_team_id_fkey&amp;#34;&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;FOREIGN&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;KEY&lt;/span>; (team_id) &lt;span style=&quot;color:#66d9ef&quot;>;REFERENCES&lt;/span>; teams(id) &lt;/code>;&lt;/pre>;&lt;/div>;&lt;h3 id=&quot;human-readable-output&quot;>;Human readable output&lt;/h3>; &lt;p>;Of course you may want to go one step further and actually get a sense for the data. Here a basic &lt;code>;SELECT&lt;/code>; tends to work with a limit 1. As you don&amp;rsquo;t quite know the shape of the data this is where having &lt;code>;\x auto&lt;/code>; setup within your &lt;code>;.psqlrc&lt;/code>; file is helpful to autoformat the output to your screen. You can also just manually run &lt;code>;\x auto&lt;/code>; in your SQL session to get cleaner output.&lt;/p>; &lt;div class=&quot;highlight&quot;>;&lt;pre style=&quot;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&quot;>;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;>; &lt;span style=&quot;color:#66d9ef&quot;>;SELECT&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;*&lt;/span>; &lt;span style=&quot;color:#66d9ef&quot;>;FROM&lt;/span>; users &lt;span style=&quot;color:#66d9ef&quot;>;LIMIT&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;1&lt;/span>;; &lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;[ RECORD &lt;span style=&quot;color:#ae81ff&quot;>;1&lt;/span>; ]&lt;span style=&quot;color:#75715e&quot;>;-------------+-------------------------------------------------------------- &lt;/span>;&lt;span style=&quot;color:#75715e&quot;>;&lt;/span>;id &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;0&lt;/span>;a7a3cde&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;3613&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;4073&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;86&lt;/span>;a7&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;6&lt;/span>;a19b4e62bbe email &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; craig.kerstiens&lt;span style=&quot;color:#f92672&quot;>;@&lt;/span>;gmail.com encrypted_password &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#960050;background-color:#1e0010&quot;>;$&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;#&lt;/span>;IJ937Gmsdf00297sEmdfu12234 reset_password_token &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;#&lt;/span>; reset_password_sent_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;#&lt;/span>; remember_created_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;2016&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;07&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;14&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;14&lt;/span>;:&lt;span style=&quot;color:#ae81ff&quot;>;31&lt;/span>;:&lt;span style=&quot;color:#ae81ff&quot;>;01&lt;/span>;.&lt;span style=&quot;color:#ae81ff&quot;>;414795&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;+&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;00&lt;/span>; last_sign_in_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;2020&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;02&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;12&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;21&lt;/span>;:&lt;span style=&quot;color:#ae81ff&quot;>;32&lt;/span>;:&lt;span style=&quot;color:#ae81ff&quot;>;53&lt;/span>;.&lt;span style=&quot;color:#ae81ff&quot;>;629246&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;+&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;00&lt;/span>; created_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;2016&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;02&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;18&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;03&lt;/span>;:&lt;span style=&quot;color:#ae81ff&quot;>;03&lt;/span>;:&lt;span style=&quot;color:#ae81ff&quot;>;26&lt;/span>;.&lt;span style=&quot;color:#ae81ff&quot;>;403108&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;+&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;00&lt;/span>; updated_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;2020&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;02&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;14&lt;/span>; &lt;span style=&quot;color:#ae81ff&quot;>;23&lt;/span>;:&lt;span style=&quot;color:#ae81ff&quot;>;16&lt;/span>;:&lt;span style=&quot;color:#ae81ff&quot;>;16&lt;/span>;.&lt;span style=&quot;color:#ae81ff&quot;>;080729&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;+&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;00&lt;/span>; name &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; Craig team_id &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; d46e864&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;1886&lt;/span>;&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;45&lt;/span>;e6&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;b538&lt;span style=&quot;color:#f92672&quot;>;-&lt;/span>;&lt;span style=&quot;color:#ae81ff&quot;>;8991562&lt;/span>;d2e99 deleted_at &lt;span style=&quot;color:#f92672&quot;>;|&lt;/span>; &lt;span style=&quot;color:#f92672&quot;>;#&lt;/span>; Time: &lt;span style=&quot;color:#ae81ff&quot;>;91&lt;/span>;.&lt;span style=&quot;color:#ae81ff&quot;>;592&lt;/span>; ms &lt;/code>;&lt;/pre>;&lt;/div>;&lt;p>;Most databases I work with now leverage JSONB. It&amp;rsquo;sa great tool for mixing semi-structured data with more structured data.&lt;/p>; &lt;p>;If you&amp;rsquo;re using &lt;a href=&quot;https://info.crunchydata.com/blog/using-postgresql-for-json-storage&quot;>;JSON&lt;/a>; or &lt;a href=&quot;https://info.crunchydata.com/blog/using-postgresql-for-json-storage&quot;>;JSONB&lt;/a>; then there is also a handy utility function to clean up that output - &lt;code>;jsonb_pretty(yourcolumnhere)&lt;/code>;. This will take care of making that huge JSON blob nice and readable.&lt;/p>; &lt;h3 id=&quot;feel-more-at-home-when-you-encounter-a-new-database&quot;>;Feel more at home when you encounter a new database&lt;/h3>; &lt;p>;It doesn&amp;rsquo;t take hours of reading an ERD or schema files. In about 5-10 minutes of connecting to a new database I&amp;rsquo;m able to get a sense of how things are structured and able to actually start digging in. Don&amp;rsquo;t get me wrong, I&amp;rsquo;m by no means and expert in that time, but knowing some of these basic commands will really help the next time you encounter a database and are asked to help out or glean insights from it.&lt;/p>;</description></item><item><title> Spokesperson certification</title><link/> /2020/04/21/Spokesperson-certification/<pubDate> Tue, 21 Apr 2020 12:55:56 -0800</pubDate><guid> /2020/04/21/Spokesperson-certification/</guid><description> &lt;p>;One of my most fascinating work experiences was going through the spokesperson certification process at a large tech co. This isn&amp;rsquo;t some rubber stamp virtual training to not use profanity on stage type training. This is the training they would give to any executive before you were greenlit to talk to press. When I say press I mean Techcrunch, but also Bloomberg, or Jim Cramer, or any major big brand news outlet.&lt;/p>; &lt;p>;As a product manager over a specific product line I knew my product well. Put me in front of an unhappy customer and I could lay out our roadmap, listen to their questions, take product input, and get them to a happy place. But this wasn&amp;rsquo;t about my product (only). A person with the spokesperson stamp could be asked any question about an entirely other area fo the company. You had to know every recent product launch, all the key metrics, know where traps may lie, and you had to land the core company messages in addition to the ones you cared about. To study you received about 100 pages of a powerpoint presentation that had key releases from each product, key numbers, customer stories.&lt;/p>; &lt;p>;The certification itself was an interview. They flew in a former news reporter. You walked into a conference, the lights were off, except for a bright light focused on the seat you&amp;rsquo;d sit in with a camera rolling. It felt more like an intense interogation room than a big co tech conference room. To ensure light didn&amp;rsquo;t get in and no one stopped walking by the room they put up black paper to completely black out the room.&lt;/p>; &lt;p>;Oh, and the worst part of the process&amp;hellip; I was told my our marketing person I could wear my hat&amp;hellip; as I always do during the interview. (I was probably the only person not in a full suit they saw the entire day. And probably the only person that walked in with a ballcap on ever.) Well she said yes of course, turns out they couldn&amp;rsquo;t see my face under the lights, it was just a shadow so I had to take it off. From the outset I&amp;rsquo;d been tricked, but I digress.&lt;/p>; &lt;p>;The questions would start with a basic, tell me about yourself and your background. Can you tell whats new and exciting about product x. Then over time it would delve into the other product areas. I told some of the canned stories and some personal ones. &lt;em>;I learned on the personal ones, it&amp;rsquo;s up to me but they coach their executives to not said spouses or childrens names, it can only get them in trouble.&lt;/em>; For each product line you were supposed to hit major 2 news and announcements, 2 customers, and 2 key stats (&lt;em>;ie we crossed 1 billion mentions of my name&lt;/em>;).&lt;/p>; &lt;p>;But it wasn&amp;rsquo;t just softballs. There were traps. You were asked about an executive that recently left, and if the product line was okay or was it a sign of bad things to come during earnings. It&amp;rsquo;s fine though I reassured them they&amp;rsquo;ve made some great contributions to the company, and wanted to spend some time with their family and giving back to their local community. Of course internal speculation was they were cashed out and interested in running for public office.&lt;/p>; &lt;p>;As the camera turned off a few of the stories I&amp;rsquo;d told about customers and products the PR team wanted to dig deeper on. Remarking &amp;ldquo;That&amp;rsquo;s amazing, we power that I had no idea.&amp;rdquo; and &amp;ldquo;That&amp;rsquo;s awesome they&amp;rsquo;re able to do that at scale thanks to us.&amp;rdquo;&lt;/p>; &lt;p>;In the end I got a stamp of approval, I was cleared to talk to folks. The funny part was the comments from the PR team afterwards. They liked me, I seemed relatable, I nailed all the numbers. I wasn&amp;rsquo;t like any of their other spokespeople and they well weren&amp;rsquo;t quite sure what to do with that. I was used for some very particular media folks in the future that seemed to not want a cookie cutter. I&amp;rsquo;m good with this, hopefully it helped the company.&lt;/p>; &lt;p>;In the end it was fascinating experience. The ability to bridge, condense a lot of information (relatable story, customer brand validation, stats, and something quotable) into a single answer all from a question that was meant to be a trap for a juicy story has been easily one of the top work experiences I&amp;rsquo;ve encountered.&lt;/p>;</description></item><item><title> Lessons from college: Efficient meetings</title><link/> /2020/03/17/lessons-from-college-effecient-meetings/<pubDate> Tue, 17 Mar 2020 12:55:56 -0800</pubDate><guid> /2020/03/17/lessons-from-college-effecient-meetings/</guid><description> &lt;p>;I think back to my time in college, and I learned some valuable things. I also learned some incredibly worthless things (ie don&amp;rsquo;t flip a car upside down and then backover&amp;hellip; it&amp;rsquo;ll break the axle so you can&amp;rsquo;t roll it). Even in classes&amp;hellip; the basic approach to a supply/demand curve to maximize profit is cute when done in a classroom vs. the complexities of how things actually work&amp;hellip; I mean I get the idea behind it, but what you learn is so far being able to be translated into being usable. But what surprises me looking back was a couple of skills around running meetings that I find so rare in the workplace that have immense value.&lt;/p>; &lt;p>;I&amp;rsquo;ve always been fascinated at the intersection of business and technology. I&amp;rsquo;d been coding for a long time before college, and while interesting it was also a means to an end. When you combine technology with business you can solve things in entirely new and valuable ways. My major was management information systems, and all folks in my program came out with a computer science minor in addition to their business degree–something pretty rare for more MIS majors in other programs and well generally for anyone coming out of a business school. Perhaps I&amp;rsquo;ll get into the value of CS training even if you aren&amp;rsquo;t looking for a CS job some other time.&lt;/p>; &lt;p>;Within the program we would have a senior project that was actually a real world project for one of the large companies that sponsored part of the program. We&amp;rsquo;d have monthly reviews with the company stake holder. We&amp;rsquo;d also have weekly meetings, these were especially well run. There were really 3 items that made them especially efficient.&lt;/p>; &lt;h3 id=&quot;1-agendas-circulated-out-24-hours-ahead-of-time&quot;>;1. Agendas circulated out 24 hours ahead of time&lt;/h3>; &lt;p>;Before each meeting there was a very explicit agenda. This was circulated out 24 hrs in advance, at almost exactly the 24 hr mark the professors would inquire into the delay in the agenda. This early circulation allowed for:&lt;/p>; &lt;ol>; &lt;li>;Time to review and prepare&lt;/li>; &lt;li>;Ability to make modifications&lt;/li>; &lt;/ol>; &lt;p>;A sample agenda may look something like:&lt;/p>; &lt;ul>; &lt;li>;(5 minutes) - review last weeks action items&lt;/li>; &lt;li>;(10 minutes) - review blockers &lt;ul>; &lt;li>;blocker 1 - foo&lt;/li>; &lt;li>;blocker 2 - bar&lt;/li>; &lt;/ul>; &lt;/li>; &lt;li>;(20 minutes) - feature design walk through of x&lt;/li>; &lt;li>;(15 minutes) - toubleshooting of&lt;/li>; &lt;li>;(10 minutes) - review action items and next steps&lt;/li>; &lt;/ul>; &lt;h3 id=&quot;2-explicit-roles-for-the-meeting&quot;>;2. Explicit roles for the meeting&lt;/h3>; &lt;p>;There were three roles explicitly set for each meeting:&lt;/p>; &lt;ul>; &lt;li>;&lt;em>;Manager&lt;/em>; - This was essentially person responsible for setting up the agenda, ensuring the agenda was followed, and making sure everyone was involved and an active participant. I find that last piece is very key still today. Making sure folks that are remote have a chance to chime in, or ensuring very junior people are heard. Now days I often keep a small tally of how often various people within a meeting speak and make sure to give those that don&amp;rsquo;ta chance to.&lt;/li>; &lt;li>;&lt;em>;Timekeeper&lt;/em>; - 75% of the meetings I&amp;rsquo;m in run long, and in the end there is a big scramble to figure out what the result of the meeting was and whats next. A timekeeper making sure that you spend the allocated amount of time is key. If you don&amp;rsquo;t do this that 10 mintues for reviewing action items and next steps gets squeezed and you lost a lot of the value of the meeting.&lt;/li>; &lt;li>;&lt;em>;Scribe&lt;/em>; - A person whose sole job is to take notes ensured there were good quality notes. These would be kept within a sharepoint that was circulated around.&lt;/li>; &lt;/ul>; &lt;h3 id=&quot;3-after-the-meeting&quot;>;3. After the meeting&lt;/h3>; &lt;p>;While the scribe was the one to take the notes, the meeting wasn&amp;rsquo;t done when the meeting was over. The notes were then circulated around. Everyone on the team would review and make comments/notes on things they felt were different or missed details. At the end in the review action items there would be very clear owners assigned and next steps laid out.&lt;/p>; &lt;p>;Within 24 hrs after the meeting while it was fresh everyone was required to review and acknowledge. This ensured there was a closed bookend and then this would be a clear transition for each of the roles to move on to the next meeting.&lt;/p>; &lt;h2 id=&quot;im-sorry-professors-you-were-right&quot;>;I&amp;rsquo;m sorry professors, you were right&lt;/h2>; &lt;p>;At the time, it was annoying. I could take my own notes. I remembered the things I needed to do. If we went over on time for one item it was because it was important. But now&amp;hellip; putting these things in place, any time I replicate this I get more time in my day and the team gets more done. Science/Math/History&amp;hellip; sure, but running efficient meetings I never would have expected how basic but also challenging and how valuable.&lt;/p>;</description></item><item><title> An interview on what makes Postgres unique (extensions)</title><link/> /2019/11/13/postgres-interview-from-art-of-postgresql/<pubDate> Wed, 13 Nov 2019 12:55:56 -0800</pubDate><guid> /2019/11/13/postgres-interview-from-art-of-postgresql/</guid><description> &lt;p>;I&amp;rsquo;ve been at dinners before with developers that admitted developers, themselves included, can be a bit opinionated. In one case one said for example, &amp;ldquo;I love Postgres, but I have no idea why.&amp;rdquo; They were sitting at the wrong table to use Postgres as an example&amp;hellip; But it is quite often that I am asked &lt;a href=&quot;/2017/04/30/why-postgres-five-years-later/&quot;>;Why Postgres&lt;/a>;.&lt;/p>; &lt;p>;In fact a little over a year ago good friend Dimitri Fontaine asked if he could interview me for a book he&amp;rsquo;s working on &lt;a href=&quot;https://theartofpostgresql.com/?affiliate=cek&quot;>;for Postgres&lt;/a>;. I&amp;rsquo;ve long said their is a shortage of good books about Postgres and he&amp;rsquo;s done a great job with his in providing a guide targetted at developers, not just DBAs, that want to become better with their database. What follows is the excerpt of the interview from the book. And if you&amp;rsquo;re interested in picking up a copy he was friendly enough to share a discount code you can find below.&lt;/p>; &lt;p>;&lt;strong>;Intro&lt;/strong>;&lt;/p>; &lt;p>;Craig heads up the Cloud team &lt;a href=&quot;https://www.twitter.com/citusdata&quot;>;@citusdata&lt;/a>; &lt;strong>;now running product for Azure Postgres since being acquired by Microsoft&lt;/strong>;. Citus extends Postgres to be a horizontally scalable distributed database. If you have a database, especially Postgres, that needs to scale beyond a single node (typically at 100GB and up) Craig is always happy to chat and see if Citus can help.&lt;/p>; &lt;p>;Previously Craig has spent a number of years @heroku, a platform-as-a-service, which takes much of the overhead out of IT and lets developers focus on building features and adding value. The bulk of Craig&amp;rsquo;s time at Heroku was spent running product and marketing for Heroku Data.&lt;/p>; &lt;p>;&lt;strong>;In your opinion, how important are extensions for the PostgreSQL open source project and ecosystem?&lt;/strong>;&lt;/p>; &lt;blockquote>; &lt;p>;&lt;em>;To me the extension APIs and growing ecosystem of extensions are the biggest advancement to Postgres in probably the last 10 years. Extensions have allowed Postgres to extend beyond a traditional relational database to much more of a data platform. Whether it&amp;rsquo;s the initial NoSQL datatypes (if we exclude XML that is) in hstore, to the rich feature set in geospatial with GIS, or approximation algorithms such as HyperLogLog or TopN you have extensions that now by themselves take Postgres into a new frontier.&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;blockquote>; &lt;p>;&lt;em>;Extensions allow the core to move at a slower pace, which makes sense. Each new feature in core means it has to be thoroughly tested and safe. That&amp;rsquo;s not to say that extensions don&amp;rsquo;t, but extensions that can exist outside core, then become part of the contrib provide a great on ramp for things to move much faster.&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;p>;&lt;strong>;What are your favorite PostgreSQL extensions, and why?&lt;/strong>;&lt;/p>; &lt;blockquote>; &lt;p>;&lt;em>;My favorite three extensions are:&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;blockquote>; &lt;ol>; &lt;li>;&lt;em>;pg_stat_statements&lt;/em>;&lt;/li>; &lt;li>;&lt;em>;Citus&lt;/em>;&lt;/li>; &lt;li>;&lt;em>;HyperLogLog&lt;/em>;&lt;/li>; &lt;/ol>; &lt;/blockquote>; &lt;blockquote>; &lt;p>;&lt;em>;&lt;code>;pg_stat_statements&lt;/code>; is easily the most powerful extension for an application developer without having to understand deep database internals to get insights to optimize their database. For many application developers the database is a black box, but &lt;code>;pg_stat_statements&lt;/code>; is a great foundation for AI for your database that I only expect to be improved upon in time.&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;blockquote>; &lt;p>;&lt;em>;&lt;em>;Citus&lt;/em>;: I&amp;rsquo;m of course biased because I work there, but I followed Citus and pg_shard for 3 years prior to joining. Citus turns Postgres into a horizontally scalable database. Under the covers it&amp;rsquo;s sharded, but application developers don&amp;rsquo;t have to think or know about that complexity. With Citus Postgres is equipped to tackle larger workloads than ever before as previously Postgres was constrained to a single box or overly complicated architectures.&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;blockquote>; &lt;p>;&lt;em>;&lt;em>;HyperLogLog&lt;/em>;: I have a confession to make. In part I just love saying it, but it also makes you seem uber-intelligent when you read about the algorithm itself. &amp;ldquo;K minimum value, bit observable patterns, stochastic averaging, harmonic averaging.&amp;rdquo; I mean who doesn&amp;rsquo;t want to use something with all those things in it? In simpler terms, it&amp;rsquo;s close enough approximate uniques that are compose-able with a really small footprint on storage. If you&amp;rsquo;re building something like a web analytics tool HyperLogLog is an obvious go to.&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;p>;&lt;strong>;How do you typically find any extension you might need? Well, how do you know you might need a PostgreSQL extension in the first place?&lt;/strong>;&lt;/p>; &lt;blockquote>; &lt;p>;&lt;em>;&lt;a href=&quot;https://pgxn.org&quot;>;pgxn.org&lt;/a>; and github are my two go-tos. Though Google also tends to work pretty well. And of course I stay up to date on new ones via &lt;a href=&quot;https://postgresweekly.com&quot;>;PostgresWeekly.com&lt;/a>;.&lt;/em>;&lt;/p>; &lt;p>;&lt;em>;Though in reality I often don&amp;rsquo;t always realize I need one. I search for the problem I&amp;rsquo;m trying to solve and discover it. I would likely never search for HyperLogLog, but a search for Postgres approximate count or approximate distincts would yield it pretty quickly.&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;p>;&lt;strong>;Is there any downside you could think of when your application code base now relies on some PostgreSQL extension to run? I could think of extension&amp;rsquo;s availability in cloud and SaaS offerings, for instance.&lt;/strong>;&lt;/p>; &lt;blockquote>; &lt;p>;&lt;em>;It really depends. There are extensions that are much more bleeding edge, and ones that are more mature. Many of the major cloud providers support a range of extensions, but they won&amp;rsquo;t support any extension. If they do support it there isn&amp;rsquo;ta big downside to leveraging it. If they don&amp;rsquo;t you need to weigh the cost of running and managing Postgres yourself vs. how much value that particular extension would provide. As with all things managed vs. not, there is a trade-off there and you need to decide which one is right for you.&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;blockquote>; &lt;p>;&lt;em>;Though if something is supported and easy to leverage wherever you run, by all means, go for it.&lt;/em>;&lt;/p>; &lt;/blockquote>; &lt;p>;&lt;em>;If you&amp;rsquo;re looking for a deeper resource on Postgres I recommend the book &lt;a href=&quot;https://theartofpostgresql.com/?affiliate=cek&quot;>;The Art of PostgreSQL&lt;/a>;. It is by a personal friend that has aimed to create the definitive guide to Postgres, from a developer perspective. If you use code CRAIG15 you&amp;rsquo;ll receive 15% off as well.&lt;/em>;&lt;/p>;</description></item><item><title> Interesting Upcoming pgDays</title><link/> /2019/10/29/Interesting-Upcoming-pgDays/<pubDate> Tue, 29 Oct 2019 12:55:56 -0800</pubDate><guid> /2019/10/29/Interesting-Upcoming-pgDays/</guid><description> &lt;p>;I&amp;rsquo;ve been to a lot of conferences over the years. &lt;a href=&quot;https://2019.pgconf.eu/&quot;>;PgConf EU&lt;/a>;, &lt;a href=&quot;https://postgresopen.org&quot;>;PostgresOpen&lt;/a>;, too many pgDays to count, and even more none Postgres conferences (OSCON, Strangeloop, Railsconf, PyCon, LessConf, and many more). I&amp;rsquo;ve always found Postgres conferences one of the best places to get training and learn about what&amp;rsquo;s new with Postgres (in addition to Dimitri&amp;rsquo;s recent book, more on that below). They&amp;rsquo;re my regular stop to catch up on all the new features of a release before it comes out, and often there is a talk highlighting what is new with a simple easy to understand summary once released.&lt;/p>; &lt;p>;I just got back from PGConf EU a little over a week ago and it was a great time. I&amp;rsquo;m sure we&amp;rsquo;ll see some rundowns of it start appearing on Postgres planet. But, as far as I&amp;rsquo;m concerned PGConf EU is in the past (unless your counting next year which is in Berlin-in which case I&amp;rsquo;ll see you there). For me it&amp;rsquo;s time to look to the future and there are a number of upcoming pgDays I&amp;rsquo;m looking forward to.&lt;/p>; &lt;p>;The first two I want to highlight are separate events, but you&amp;rsquo;ll notice they&amp;rsquo;re scheduled nicely for you to easily attend both. With a day in between for travel you&amp;rsquo;ll find that many speakers and attendees depart one and head straight to the other. It makes for an easy opportunity to visit two cities, see two different communities, and yet not have to spend too much time traveling. The first is &lt;a href=&quot;https://2020.nordicpgday.org/&quot;>;Nordic pgDay&lt;/a>; in Helsinki. It&amp;rsquo;s coming up on March 24. The second is &lt;a href=&quot;https://2020.pgday.paris/&quot;>;pgDay Paris&lt;/a>; on March 26. Both of these are great single track conferences. If you&amp;rsquo;re in Europe of fancy a trip to Europe I recommend giving them a look, and even better the CFPs are open so consider submitting.&lt;/p>; &lt;p>;Another pgDay I have to mention is right in my backyard. &lt;a href=&quot;https://2020.pgdaysf.org&quot;>;pgDay SF&lt;/a>; I&amp;rsquo;m particularly excited for a few reasons:&lt;/p>; &lt;ul>; &lt;li>;San Francisco is very much a central tech hub, which means a great chance of learning from folks at many many interesting tech companies in attendance&lt;/li>; &lt;li>;Just like Nordic and Paris this is a single track conference, which I&amp;rsquo;ma personal fan of because you can have continuity between talks and shared conversation with other attendees&lt;/li>; &lt;li>;The venue! If you&amp;rsquo;re not from the bay area you may not be aware, but Swedish American Hall is well known music venue within SF. It&amp;rsquo;s had many famous artists &lt;a href=&quot;https://en.wikipedia.org/wiki/Cafe_Du_Nord&quot;>;over the years&lt;/a>; and now pgDay SF joins the ranks.&lt;/li>; &lt;/ul>; &lt;p>;This isn&amp;rsquo;t an exhaustive list of course, just a few on my personal list that I hope to make it to. If you&amp;rsquo;re there and see me make sure to say hi!&lt;/p>; &lt;p>;&lt;em>;If you&amp;rsquo;re looking for a deeper resource on Postgres I recommend the book &lt;a href=&quot;https://theartofpostgresql.com/?affiliate=cek&quot;>;The Art of PostgreSQL&lt;/a>;. It is by a personal friend that has aimed to create the definitive guide to Postgres, from a developer perspective. If you use code CRAIG15 you&amp;rsquo;ll receive 15% off as well.&lt;/em>;&lt;/p>;</description></item><item><title> Guidance for conducting offsites</title><link/> /2019/10/10/Guidance-for-conducting-offsites/<pubDate> Thu, 10 Oct 2019 12:55:56 -0800</pubDate><guid> /2019/10/10/Guidance-for-conducting-offsites/</guid><description> &lt;p>;Offsites an invaluable tool in getting a team aligned. I&amp;rsquo;ve been a part of organizations where offsites never happened, and then when they happened at a regular interval. Just because offsites happened it didn&amp;rsquo;t mean they had the same significant impact to alignment and ability to execute moving forward. What follows is a few key principles around conducting an impactful offsite.&lt;/p>; &lt;h3 id=&quot;get-out-of-the-office&quot;>;Get out of the office&lt;/h3>; &lt;p>;An offsite isn&amp;rsquo;t reserving a conference room for a full day and just sitting there meeting on special topics. A change of scenery is important, and nice scenery will impact your abiltiy to collaborate. &lt;em>;One long time friend and colleague communicated to me about 10 years into his working career, that the thing he most values in a workplace is natural light. He remarked younger him wanted free food and drinks, now he finds him much happier and more productive with natural light above all other amenities.&lt;/em>; A similar environment for an offsite is very helpful.&lt;/p>; &lt;p>;The best option isn&amp;rsquo;ta hotel with a rented conference room, but rather an AirBnB with each person their own room, a large kitchen, and large living room. More on the why for each of those later.&lt;/p>; &lt;p>;From working with some teams that are often local and a portion of them remote, hosting the offsite within a 2 hr drive of your primary office can be good. You don&amp;rsquo;t waste the full day traveling, for remote team members they can also budget 1-2 days in the office to see other team members in addition to the time spent at the offsite.&lt;/p>; &lt;h3 id=&quot;collaboration-is-key&quot;>;Collaboration is key&lt;/h3>; &lt;p>;Get rid of powerpoint presentations and someone presenting on a screen. That isn&amp;rsquo;t collaboration, that is a presentation. If you have a team of 8 and each person presents for an hour you haven&amp;rsquo;t collaborated for 8 hrs, you&amp;rsquo;ve been presented to for 7 and presented for 1. I personally don&amp;rsquo;t like team building exercises, but I&amp;rsquo;ll admit they can be useful here.&lt;/p>; &lt;p>;A presentation by the leadership at the offsite for a few minutes to frame things can be helpful. It&amp;rsquo;s key to not have a projector and folks staring at a screen. Instead having a few prepared notes and ability interactively discuss is great. Collaborating on a large notepad, or using sticky notes for ideas and brainstorming is great. One of my favorite things to do at an offsite is a &lt;a href=&quot;/2013/08/13/rule-of-thirds/&quot;>;gridding exercise&lt;/a>;.&lt;/p>; &lt;h3 id=&quot;2-3-days-is-ideal&quot;>;2-3 days is ideal&lt;/h3>; &lt;p>;You don&amp;rsquo;t need a full week offsite, but a 1 day offsite doesn&amp;rsquo;t really provide ideas to evolve and change over time. The ideal to me is 3 days where you can make some statements about ideas on day 1, and then drill deeper into those on day 2 or 3. Having the ability to do research on data and evaluate any plans you make is helpful. You also then can have good collaborative time, but also set aside time for contentious topics. If you cover a contentious topic and then jump right into collaboration without time to change your mindset you&amp;rsquo;re going to get a very different outcome. Breaking things up across days makes this way easier.&lt;/p>; &lt;p>;2-3 days also allows time for non work activities. Coming together as a team will let you work better in the future. Boardgames are a common favorite, video games are an occasional activity. Sometimes sitting by a fireplace and enjoying a nice glass of wine and just catching up.&lt;/p>; &lt;p>;&lt;em>;Those moments can live on for a very long time. Many colleagues from years ago will recall how when playing &amp;ldquo;We didn&amp;rsquo;t play test this at all&amp;rdquo;, we brought back online an archived server intentionally to cause a page so an engineer would pick up his phone, only for one of us to play a card causing him to lose the game due to holding his phone. Those stories create a foundation and shared experience to build on in the future for how you work together&lt;/em>;&lt;/p>; &lt;p>;This takes me onto the next point&amp;hellip;&lt;/p>; &lt;h3 id=&quot;food&quot;>;Food&lt;/h3>; &lt;p>;Too often offsites are a day of meetings in a conference room, followed by dinner out at a nice restaurant. The exact opposite works better. We&amp;rsquo;ve already talked about location. But food should be collaborative as well. Over 2-3 days you may do one dinner out, but even that isn&amp;rsquo;t the norm. Instead make a meal list ahead of time, and people spend time in the kitchen together. You&amp;rsquo;ll typically find you have 1-2 more cooks in the team than others, but then you have a lot of helpers.&lt;/p>; &lt;p>;&lt;em>;It actually reminds me a bit of my wedding reception back home. I smoked about 80 lbs of meat for the reception. As we were taking the meat off, I walked back in to 4 generations of in-laws, the older ones teaching the younger ones how to pull pork.&lt;/em>;&lt;/p>; &lt;p>;Cooking together is another form of collaborating. You can easily learn about cultures and backgrounds. I didn&amp;rsquo;t realize melon with proscuitto was always supposed to be server with port if you&amp;rsquo;re in France, but now I can eat it no other way. Splitting up the duties so that 2-3 help cook a meal means you don&amp;rsquo;t spend all your time cooking, but you get people working together.&lt;/p>; &lt;h3 id=&quot;dont-steal-a-weekend&quot;>;Don&amp;rsquo;t steal a weekend&lt;/h3>; &lt;p>;I mentioned 2-3 days is ideal. Please don&amp;rsquo;t use one of those days as a weekend. As the leader or coordinator of such you may not have weekend obligations and happy to give up a day of it. But many on your team may have other commitements and such, an offsite is valuable, but asking people to give up their weekend to essentially do more work isn&amp;rsquo;ta great look.&lt;/p>; &lt;h3 id=&quot;offsites-for-everyone&quot;>;Offsites for everyone&lt;/h3>; &lt;p>;Offsites aren&amp;rsquo;t just for management. The folks in boots on the ground doing the work has as much need and value as the leadership team sitting there determining the next 5 year strategy. Allowing engineers that are building things, supporting customers, answering pages to brainstorm and collaborate on how to more effectively design the systems and move more quickly will pay huge dividends. You&amp;rsquo;ll find experiments, and then new tools and systems that allow you to ship things faster with higher quality. Collaborating with the product team is key as well, an engineering offsite in isolation leaves out the voice of the customer. A product offsite without engineering leaves you daydreaming of solutions without being grounded in the reality of what is possible.&lt;/p>;</description></item></channel></rss>